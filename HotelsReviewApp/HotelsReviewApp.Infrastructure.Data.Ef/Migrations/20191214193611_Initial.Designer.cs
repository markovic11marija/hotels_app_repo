// <auto-generated />
using System;
using HotelsReviewApp.Infrastructure.Data.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelsReviewApp.Infrastructure.Data.Ef.Migrations
{
    [DbContext(typeof(HotelsReviewDbContext))]
    [Migration("20191214193611_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<int?>("ReviewedHotelId");

                    b.HasKey("Id");

                    b.HasIndex("ReviewedHotelId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Hotel", b =>
                {
                    b.OwnsOne("HotelsReviewApp.Domain.Model.Address", "Address", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City");

                            b1.Property<string>("Country");

                            b1.Property<int>("HouseNumber");

                            b1.Property<string>("HouseNumberAddition");

                            b1.Property<string>("Street");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("Address")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.Address", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("HotelsReviewApp.Domain.Model.GeoLocation", "GeoLocation", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("GeoLocation")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.GeoLocation", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("HotelsReviewApp.Domain.Model.Image", "Image", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<byte[]>("FileBytes");

                            b1.Property<string>("FileName");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("Image")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.Image", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Review", b =>
                {
                    b.HasOne("HotelsReviewApp.Domain.Model.Hotel", "ReviewedHotel")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewedHotelId");
                });
#pragma warning restore 612, 618
        }
    }
}
