// <auto-generated />
using System;
using HotelsReviewApp.Infrastructure.Data.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelsReviewApp.Infrastructure.Data.Ef.Migrations
{
    [DbContext(typeof(HotelsReviewDbContext))]
    [Migration("20191215003818_UserReactionsFix")]
    partial class UserReactionsFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("HotelRating")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("ReviewAuthorId");

                    b.Property<int?>("ReviewedHotelId");

                    b.HasKey("Id");

                    b.HasIndex("ReviewAuthorId");

                    b.HasIndex("ReviewedHotelId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<bool>("IsAdministrator");

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.UserFavoriteHotel", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("HotelId");

                    b.HasKey("UserId", "HotelId");

                    b.HasIndex("HotelId");

                    b.ToTable("UserFavoriteHotel");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.UserReviewReaction", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ReviewId");

                    b.Property<int>("ReactionType");

                    b.HasKey("UserId", "ReviewId");

                    b.HasIndex("ReviewId");

                    b.ToTable("UserReviewReaction");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Hotel", b =>
                {
                    b.OwnsOne("HotelsReviewApp.Domain.Model.Address", "Address", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City");

                            b1.Property<string>("Country");

                            b1.Property<int>("HouseNumber");

                            b1.Property<string>("HouseNumberAddition");

                            b1.Property<string>("Street");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("Address")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.Address", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("HotelsReviewApp.Domain.Model.GeoLocation", "GeoLocation", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("GeoLocation")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.GeoLocation", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("HotelsReviewApp.Domain.Model.Image", "Image", b1 =>
                        {
                            b1.Property<int>("HotelId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<byte[]>("FileBytes");

                            b1.Property<string>("FileName");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.HasOne("HotelsReviewApp.Domain.Model.Hotel")
                                .WithOne("Image")
                                .HasForeignKey("HotelsReviewApp.Domain.Model.Image", "HotelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.Review", b =>
                {
                    b.HasOne("HotelsReviewApp.Domain.Model.User", "ReviewAuthor")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewAuthorId");

                    b.HasOne("HotelsReviewApp.Domain.Model.Hotel", "ReviewedHotel")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewedHotelId");
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.UserFavoriteHotel", b =>
                {
                    b.HasOne("HotelsReviewApp.Domain.Model.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelsReviewApp.Domain.Model.User", "User")
                        .WithMany("FavoriteHotels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelsReviewApp.Domain.Model.UserReviewReaction", b =>
                {
                    b.HasOne("HotelsReviewApp.Domain.Model.Review", "Review")
                        .WithMany("UserReactions")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelsReviewApp.Domain.Model.User", "User")
                        .WithMany("ReviewReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
